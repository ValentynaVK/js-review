// 6. Створити функцію, яка приймає вік користувача і в залежності від віку, повертає рядок:
// - якщо вік менше 18 - “Ви неповнолітній”.
// - якщо вік більше або дорівнює 18 - “Ви доросла людина”.

// Реалізувати функцію двома способами - if/else і тернарний оператор.
// function userAge(age) {
//   if (age < 18) {
//     return "You are not adult";
//   } else {
//     return "You are adult";
//   }
// }
// console.log(userAge(17));

// const userAge = (age) => {
//   return age >= 18 ? "You are adult" : "You aren't adult";
// };

// console.log(userAge(25));
// ======================
// Написати функцію detectType, яка буде приймати один аргумент і повертати текст з інформацією про те, до якого саме типу належить передане значення. Врахувати, що тип null - object, але функція має повертати саме ‘null’:

function detectType(value) {
  if (value === null) {
    return "Це null";
  } else {
    return `Це ${typeof value}`;
  }
}

console.log(detectType("Привіт")); // "Це string"
console.log(detectType(123)); // "Це number"
console.log(detectType(true)); // "Це boolean"
console.log(detectType(null)); // "Це null"
console.log(detectType(undefined)); // "Це undefined"
console.log(detectType(Symbol("id"))); // "Це symbol"
console.log(detectType(10n)); // "Це bigint"
// =========================

// Створити функцію reverseString, яка приймає рядок і повертає його у зворотному порядку. Зробити це за допомогою циклу for.
// ============================

// Переписати наступний код з використанням стрілкових функцій:
function ask(question, yes, no) {
  if (confirm(question)) {
    yes();
  } else {
    no();
  }
}

ask(
  "Ви згодні?",
  function () {
    console.log("Ви погодились.");
  },
  function () {
    console.log("Ви заперечили.");
  }
);
// ============================

// 10. Уявіть, що ви організовуєте приватну вечірку. На вході охоронець перевіряє, чи може людина потрапити на цю вечірку.

// На вечірку пускають гостей, у яких є є дійсний квиток. Охоронець має перевірити код, який є у квитку. Код вважається дійсним, якщо починається з "VIP" або “TOP”  і має довжину 10 символів. Для цього можна використати функцію startsWith(’’);

// Також охоронець перевіряє вік гостей, які мають квиток. Пропускає тільки тих, кому виповнилось 18.

// Використовуючи логічні оператори створити функцію, яка перевіряє гостя і вирішує, чи пускати його на вечірку.
// ==========================
// 11. Уявіть, що ви розробляєте програму для автоматичного вибору номера в готелі. Готель має кілька типів кімнат, які можна вибрати залежно від потреб клієнта. Ви повинні реалізувати перевірку умов для підбору оптимального варіанту.

// **Умови вибору кімнати:**

// 1. Якщо клієнт має членство VIP або готовий заплатити більше 5000 грн, пропонується люкс.
// 2. Якщо клієнт подорожує сім'єю (3 і більше людей) і має бюджет понад 3000 грн, пропонується сімейний номер.
// 3. Якщо клієнт має хоча б 500 грн і не має тварин, пропонується економний номер.
// 4. Якщо клієнт має тварин і бюджет понад 1000 грн, пропонується номер для гостей із тваринами.
// 5. Якщо клієнт не відповідає жодній умові, програма пропонує шукати інший готель.

// **Дані, які потрібно отримати від клієнта:**

// 1. Бюджет клієнта.
// 2. Чи є клієнт членом VIP-програми.
// 3. Скільки людей подорожує.
// 4. Чи є у клієнта тварини.

// ==============================
// Обчислити  вартість товару, враховуючи знижку. Функція приймає два параметри - price і discount. Якщо при виклику функції знижка не передана, вважаємо, що знижка дорівнює нулю.
console.log(calculatePrice(100)); // 100
console.log(calculatePrice(100, 0.1)); // 90
